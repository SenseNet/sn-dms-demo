export const customSchema = [
  {
    ContentTypeName: 'GenericContent',
    DisplayName: 'Content',
    Description: 'This type is the base content type of the Sense/Net ECMS.',
    Icon: 'Content',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Id',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Id',
        Description: 'Unique Id for the content.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'ParentId',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Parent Id',
        Description: 'Id of the parent content.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'OwnerId',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Owner Id',
        Description: 'Id of the owner.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'Owner',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Owner',
        Description: 'Content owner.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'VersionId',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Version Id',
        Description: 'Database row Id of current version.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'Type',
        FieldClassName: 'SenseNet.ContentRepository.Fields.NodeTypeField',
        DisplayName: 'Content Type Name',
        Description: 'Content type of the node in the repository.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'TypeIs',
        FieldClassName: 'SenseNet.ContentRepository.Fields.NodeTypeField',
        DisplayName: 'Ancestor Content Type Names',
        Description: 'Ancestor content types of the node in the repository.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Icon',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Icon',
        Description: 'Icon',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'CreatedById',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Created By (Id)',
        Description: 'Id of creator.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'ModifiedById',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Last Modified By (Id)',
        Description: 'Id of last modifier.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'Version',
        FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
        DisplayName: 'Version',
        Description: 'Version number.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Path',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Path',
        Description: 'Content path in the repository.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Depth',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Tree Depth',
        Description: 'Content level in the tree. Root level is 0.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'InTree',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Ancestors',
        Description: 'Ancestor paths.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'InFolder',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Parent Path',
        Description: 'Parent path of the content.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'IsSystemContent',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'System Content',
        Description: 'This field is true if content is in a system folder/trash or the content is a system folder/file.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'IsFolder',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Folder',
        Description: 'This field is true if content can contain other content.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display Name',
        Description: 'Content name. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Hidden',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Hidden',
        Description: 'If checked, content will not show up in navigation.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Index',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Index',
        Description: 'Content order in navigation. Numbers closer to 0 will appear first.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'EnableLifespan',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Enable Lifespan',
        Description: 'Specify whether you want to define starting and end date for the validity of this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'ValidFrom',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Valid From',
        Description: 'This content will appear on the date you set if lifespan handling is enabled for this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'ValidTill',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Valid Till',
        Description: 'This content will disappear on the date you set if lifespan handling is enabled for this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'AllowedChildTypes',
        FieldClassName: 'SenseNet.ContentRepository.Fields.AllowedChildTypesField',
        DisplayName: 'Allowed child types',
        Description: 'You can get and set which content types are explicitly allowed to be created under this content. It is a local setting.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'EffectiveAllowedChildTypes',
        FieldClassName: 'SenseNet.ContentRepository.Fields.AllowedChildTypesField',
        DisplayName: 'Effective allowed child types',
        Description: 'You can get which content types are effective allowed to be created under this content. If there is no local setting, the global setting takes effect.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,VersioningMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'None',
            StoredText: '$Ctd-GenericContent,VersioningMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Major only',
            StoredText: '$Ctd-GenericContent,VersioningMode-2',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '3',
            Text: 'Major and minor',
            StoredText: '$Ctd-GenericContent,VersioningMode-3',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'VersioningMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.VersioningModeField',
        DisplayName: 'Versioning Mode For Current Content',
        Description: 'It shows the versioning mode of the current content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'None',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Major only',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-2',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '3',
            Text: 'Major and minor',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-3',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'InheritableVersioningMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableVersioningModeField',
        DisplayName: 'Version history',
        Description: 'Specify whether the system should create a new version whenever you create or modify a content below this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:VersioningModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        Name: 'CreatedBy',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Created by',
        Description: 'Content creator.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'CreationDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Creation date',
        Description: 'Content creation date.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'ModifiedBy',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Modified By',
        Description: 'Content was last modified by this user.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'ModificationDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Modification Date',
        Description: 'Content was last modified on this date.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,ApprovingMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'Off',
            StoredText: '$Ctd-GenericContent,ApprovingMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'On',
            StoredText: '$Ctd-GenericContent,ApprovingMode-2',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'ApprovingMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ApprovingModeField',
        DisplayName: 'Content Approval For Current Content',
        Description: 'It shows the approval mode of the current content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'Off',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'On',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-2',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'InheritableApprovingMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableApprovingModeField',
        DisplayName: 'Content approval',
        Description: 'Specify whether new or changed content below the current one should remain in a draft state until they have been approved.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:ApprovingModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        Name: 'Locked',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Locked',
        Description: 'It shows whether the content is checked out or not.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'CheckedOutTo',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Checked Out To',
        Description: 'The user currently locking the content.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'TrashDisabled',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Disable Trash',
        Description: 'You can disable trash for this content and its children. If set, you can not restore deleted content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: 'false',
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Finalized',
            StoredText: '$Ctd,Enum-GenericContent-SavingState-Finalized',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '1',
            Text: 'Creating',
            StoredText: '$Ctd,Enum-GenericContent-SavingState-Creating',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Modifying',
            StoredText: '$Ctd,Enum-GenericContent-SavingState-Modifying',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '3',
            Text: 'ModifyingLocked',
            StoredText: '$Ctd,Enum-GenericContent-SavingState-ModifyingLocked',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: 'SenseNet.ContentRepository.Storage.ContentSavingState',
        Name: 'SavingState',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Saving state',
        Description: 'State of multi-step saving.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        Name: 'ExtensionData',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Extension data',
        Description: 'You can set extra data in this field which is useful when extending a content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        AllowMultiple: false,
        Name: 'BrowseApplication',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Reference To Browse Application',
        Description: 'Set this, if you would like to override the default browse application.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'Approvable',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Approvable By Current User',
        Description: 'This fileld is true if the content is in \'pending\' state and can be approved by the current user.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'IsTaggable',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Enable Tagging',
        Description: 'Specify whether you would like to enable tagging capability for this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: 'false',
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Tags',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Tags',
        Description: 'List of tags and creators of them separated by commas.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:TagList',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'IsRateable',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Enable Rating',
        Description: 'Specify whether you would like to enable rating capability for this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: 'false',
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'RateStr',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Raw value of rating',
        Description: '',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'RateAvg',
        FieldClassName: 'SenseNet.ContentRepository.Fields.NumberField',
        DisplayName: 'Average rate',
        Description: 'Average rate of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NumberFieldSetting',
      },
      {
        Name: 'RateCount',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Rate count',
        Description: 'Count of rates.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Range: 5,
        Split: 1,
        Name: 'Rate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.RatingField',
        DisplayName: 'Rate',
        Description: '',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'RatingFieldSetting',
      },
      {
        Name: 'Publishable',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Publishable By Current User',
        Description: 'This fileld is true if the content can be published by the current user.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowMultiple: true,
        Name: 'Versions',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Versions',
        Description: 'Content version history.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'CheckInComments',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Checkin comments',
        Description: 'Comments for a new version.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'RejectReason',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Reject reason',
        Description: 'The reason why the content was rejected.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'Workspace',
        ],
        Name: 'Workspace',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Workspace',
        Description: 'The container workspace of the content.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'BrowseUrl',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Browse url',
        Description: '',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'File',
    DisplayName: 'File',
    Description: 'A type for binary documents, images, etc.',
    Icon: 'File',
    ParentTypeName: 'GenericContent',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Binary',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BinaryField',
        DisplayName: 'Binary',
        Description: 'The binary content of the document.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 0,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'BinaryFieldSetting',
      },
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display Name',
        Description: 'Content name. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:FileName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'ModifiedBy',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Modified By',
        Description: 'Content was last modified by this user.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'ModificationDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Modification Date',
        Description: 'Content was last modified on this date.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'Locked',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Locked',
        Description: 'It shows whether the content is checked out or not.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Size',
        FieldClassName: 'SenseNet.ContentRepository.Fields.NumberField',
        DisplayName: 'Size',
        Description: 'Size of the binary document.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NumberFieldSetting',
      },
      {
        Name: 'FullSize',
        FieldClassName: 'SenseNet.ContentRepository.Fields.NumberField',
        DisplayName: 'Full size',
        Description: 'The total amount of space the Document occupies, counting all versions.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NumberFieldSetting',
      },
      {
        Name: 'PageCount',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Page count',
        Description: 'Read-only field for storing the number of pages in the document. It is filled by the document preview generator.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: '-4',
        Visible: false,
        VisibleBrowse: 0,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'MimeType',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Document MIME type',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Version',
        FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
        DisplayName: 'Version',
        Description: 'Version number.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 0,
        VisibleEdit: 2,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Shapes',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Shapes',
        Description: 'Stores data used for document preview (redaction, highlight, annotation shapes). This value can be modified by the document preview plugin.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'PageAttributes',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Page attributes',
        Description: 'Stores data used for document preview (for example page rotation). This value can be modified by the document preview plugin.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Watermark',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Watermark',
        Description: 'The text that is displayed as a watermark on the document preview. The format can be set by modifying the Document Preview settings.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'ContentView',
    DisplayName: 'Content View',
    Description: 'A type for Content Views.',
    Icon: 'ContentView',
    ParentTypeName: 'File',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Watermark',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Watermark',
        Description: 'The text that is displayed as a watermark on the document preview. The format can be set by modifying the Document Preview settings.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Contract',
    DisplayName: 'Contract',
    Description: 'Description',
    Icon: 'Document',
    ParentTypeName: 'File',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Binary',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BinaryField',
        DisplayName: 'Binary',
        Description: 'The binary content of the document.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'BinaryFieldSetting',
      },
      {
        Name: 'ContractId',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Contract ID',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        SelectionRoots: [
          '/Root/Sites/Default_Site/workspaces/Sales',
        ],
        Name: 'Project',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Project',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        AllowExtraValue: true,
        AllowMultiple: false,
        Options: [
          {
            Value: 'hu',
            Text: 'Magyar',
            StoredText: 'Magyar',
            Enabled: true,
            Selected: true,
          },
          {
            Value: 'en',
            Text: 'English',
            StoredText: 'English',
            Enabled: true,
            Selected: false,
          },
          {
            Value: 'de',
            Text: 'Deutsch',
            StoredText: 'Deutsch',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'Language',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Language',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'User',
        ],
        SelectionRoots: [
          '/Root/IMS',
        ],
        Name: 'Responsee',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Account',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'Lawyer',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Lawyer',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Keywords',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Keywords',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        AllowMultiple: true,
        SelectionRoots: [
          '/Root/Sites/Default_Site/workspaces/Sales',
        ],
        Name: 'RelatedDocs',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Related documents',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'DynamicJsonContent',
    DisplayName: 'Dynamic JSON content',
    Description: 'A content type is a reusable set of fields you want to apply to certain content.',
    Icon: 'Settings',
    ParentTypeName: 'File',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'FieldControlTemplate',
    DisplayName: 'FieldControlTemplate',
    Description: 'A type for FieldControl templates.',
    Icon: 'Content',
    ParentTypeName: 'File',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Watermark',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Watermark',
        Description: 'The text that is displayed as a watermark on the document preview. The format can be set by modifying the Document Preview settings.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'HtmlTemplate',
    DisplayName: 'HTML template',
    Description: 'HTML file containing a template html fragment for various controls, e.g. action links.',
    Icon: 'File',
    ParentTypeName: 'File',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'TemplateText',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Template text',
        Description: 'Shows the contents of the html file as a text.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Image',
    DisplayName: 'Image',
    Description: 'A special Document type for storing images.',
    Icon: 'Image',
    ParentTypeName: 'File',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Keywords',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Keywords',
        Description: 'Keywords describing the image.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'DateTaken',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Date taken',
        Description: 'Date the photo was taken, if applicable.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'Index',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Index',
        Description: 'Content order in navigation. Numbers closer to 0 will appear first.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'Version',
        FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
        DisplayName: 'Version',
        Description: 'Version number.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Width',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Width',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'Height',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Height',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'PreviewImage',
    DisplayName: 'Preview image',
    Description: 'A special content type for storing preview images.',
    Icon: 'Image',
    ParentTypeName: 'Image',
    AllowIndexing: false,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'OrderForm',
    DisplayName: 'Ctd-OrderFormen-USDisplayName',
    Description: 'Ctd-OrderFormen-USDescription',
    Icon: 'Document',
    ParentTypeName: 'File',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'CompanyName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Ctd-OrderFormen-USCompanyName',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'OrderFormId',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Ctd-OrderFormen-USOrderFormId',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'CompanySeat',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Ctd-OrderFormen-USCompanySeat',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'RepresentedBy',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Ctd-OrderFormen-USRepresentedBy',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'ContactEmailAddress',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Ctd-OrderFormen-USContactEmailAddress',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'ContactPhoneNr',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Ctd-OrderFormen-USContactPhoneNr',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Settings',
    DisplayName: 'Settings',
    Description: 'Content type for storing application or module settings in text format or in custom fields.',
    Icon: 'Settings',
    ParentTypeName: 'File',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        DefaultValue: '.settings',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display Name',
        Description: 'Content name. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Version',
        FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
        DisplayName: 'Version',
        Description: 'Version number.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Index',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Index',
        Description: 'Content order in navigation. Numbers closer to 0 will appear first.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'Watermark',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Watermark',
        Description: 'The text that is displayed as a watermark on the document preview. The format can be set by modifying the Document Preview settings.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'GlobalOnly',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Global only',
        Description: 'Switching this ON will prevent the creation of local settings with the same name preventing others to gain access to the contents of this settings file through inheritance.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'IndexingSettings',
    DisplayName: 'Indexing settings',
    Description: 'A content type is a reusable set of fields you want to apply to certain content.',
    Icon: 'Settings',
    ParentTypeName: 'Settings',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'TextExtractorInstances',
        FieldClassName: 'SenseNet.Search.TextExtractorsField',
        DisplayName: 'Text extractor instances',
        Description: 'Dynamically generated text extractor instance collection.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'LoggingSettings',
    DisplayName: 'Logging settings',
    Description: 'A content type is a reusable set of fields you want to apply to certain content.',
    Icon: 'Settings',
    ParentTypeName: 'Settings',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'PortalSettings',
    DisplayName: 'Portal settings',
    Description: 'A content type is a reusable set of fields you want to apply to certain content.',
    Icon: 'Settings',
    ParentTypeName: 'Settings',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'SystemFile',
    DisplayName: 'System file',
    Description: 'A special file for internal use in the system.',
    Icon: 'File',
    ParentTypeName: 'File',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Watermark',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Watermark',
        Description: 'The text that is displayed as a watermark on the document preview. The format can be set by modifying the Document Preview settings.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'MasterPage',
    DisplayName: 'Master Page',
    Description: 'This type is for internal use only.',
    Icon: 'MasterPage',
    ParentTypeName: 'SystemFile',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'PageTemplate',
    DisplayName: 'Page Template',
    Description: 'Page Templates define the design and layout of Portlet pages.',
    Icon: 'PageTemplate',
    ParentTypeName: 'SystemFile',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        IsText: true,
        Name: 'Binary',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BinaryField',
        DisplayName: 'Binary',
        Description: 'The binary content of the document.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'BinaryFieldSetting',
      },
      {
        AllowedTypes: [
          'MasterPage',
        ],
        Name: 'MasterPageNode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'MasterPage node',
        Description: 'Master page reference. Only for internal use.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Resource',
    DisplayName: 'Resource',
    Description: 'String or binary resource used to localize the system. Its format is the same as the internal part of a standard .Net resx file.',
    Icon: 'Resource',
    ParentTypeName: 'SystemFile',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        IsText: true,
        Name: 'Binary',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BinaryField',
        DisplayName: 'Binary',
        Description: 'The binary content of the document.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'BinaryFieldSetting',
      },
      {
        Name: 'Downloads',
        FieldClassName: 'SenseNet.ContentRepository.Fields.NumberField',
        DisplayName: 'Downloads',
        Description: 'The number of downloads.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NumberFieldSetting',
      },
      {
        Name: 'Size',
        FieldClassName: 'SenseNet.ContentRepository.Fields.NumberField',
        DisplayName: 'Size',
        Description: 'Size of this version.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NumberFieldSetting',
      },
      {
        Name: 'FullSize',
        FieldClassName: 'SenseNet.ContentRepository.Fields.NumberField',
        DisplayName: 'Full size',
        Description: 'Size of all versions together.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NumberFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'UserControl',
    DisplayName: 'User control',
    Description: 'A type for storing ASP.NET user controls.',
    Icon: 'File',
    ParentTypeName: 'File',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Watermark',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Watermark',
        Description: 'The text that is displayed as a watermark on the document preview. The format can be set by modifying the Document Preview settings.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'ViewBase',
    DisplayName: 'View base',
    Description: 'An abstract type for ContentList views.',
    Icon: 'File',
    ParentTypeName: 'UserControl',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display Name',
        Description: 'Content name. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'IsDefault',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Default',
        Description: 'Whether this is the default view on the parent ContentList.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowMultiple: false,
        Name: 'Template',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Markup template',
        Description: 'The Xslt template used to generate the view.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: '/Root/System/SystemPlugins/Templates/ListView.xslt',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'FilterXml',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Filtering',
        Description: 'Define filtering rules for the view.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Ctden-USEnum-ViewBase-EnableAutofilters-Default',
            StoredText: '$Ctd,Enum-ViewBase-EnableAutofilters-Default',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '1',
            Text: 'Ctden-USEnum-ViewBase-EnableAutofilters-Enabled',
            StoredText: '$Ctd,Enum-ViewBase-EnableAutofilters-Enabled',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Ctden-USEnum-ViewBase-EnableAutofilters-Disabled',
            StoredText: '$Ctd,Enum-ViewBase-EnableAutofilters-Disabled',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: 'SenseNet.Search.FilterStatus',
        Name: 'EnableAutofilters',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Enable autofilters',
        Description: 'If autofilters are enabled system content will be filtered from the query.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Ctden-USEnum-ViewBase-EnableLifespanFilter-Default',
            StoredText: '$Ctd,Enum-ViewBase-EnableLifespanFilter-Default',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '1',
            Text: 'Ctden-USEnum-ViewBase-EnableLifespanFilter-Enabled',
            StoredText: '$Ctd,Enum-ViewBase-EnableLifespanFilter-Enabled',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Ctden-USEnum-ViewBase-EnableLifespanFilter-Disabled',
            StoredText: '$Ctd,Enum-ViewBase-EnableLifespanFilter-Disabled',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: 'SenseNet.Search.FilterStatus',
        Name: 'EnableLifespanFilter',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Enable lifespan filter',
        Description: 'If lifespan filter is enabled only valid content will be in the result.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        Name: 'Hidden',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Hidden',
        Description: 'The view won\'t show in the selector menu if checked. (If unsure, leave unchecked).',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'QueryTop',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Top',
        Description: 'If you do not want to display all content please specify here a value greater than 0.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'QuerySkip',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Skip',
        Description: 'If you do not want to display the first several content please specify here a value greater than 0.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'Icon',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Icon identifier',
        Description: 'The string identifier of the View\'s icon.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: 'views',
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'ListView',
    DisplayName: 'List view',
    Description: 'A generic view for Lists.',
    Icon: 'File',
    ParentTypeName: 'ViewBase',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser. The name of the list view should end with an \'.ascx\' extension.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        AllowMultiple: false,
        Name: 'Template',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Markup template',
        Description: 'The Xslt template used to generate the view.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: '/Root/System/SystemPlugins/ListView/Templates/ListView.xslt',
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'Columns',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'View composition',
        Description: 'Select the fields of the Content List to be displayed.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:ColumnSelector',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'SortBy',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Sort by',
        Description: 'Select the column to sort by.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:SortingEditor',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'GroupBy',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Group by',
        Description: 'Select the column to group by. This setting only works if the view template is capable of rendering grouped items.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:GroupingEditor',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Flat',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Flat',
        Description: 'Flatten contained content structure to a single list (display content from all depths).',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Binary',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BinaryField',
        DisplayName: 'Binary',
        Description: 'The binary content of the view. Please note that when a custom Markup template is specified this field is automatically filled - modify binary content by modifying given template.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'BinaryFieldSetting',
      },
      {
        Name: 'MainScenario',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Main scenario',
        Description: 'Name of the scenario that is used for the list item menus. If you leave this empty, this will be the default \'ListItem\' scenario.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'WorkflowDefinition',
    DisplayName: 'Workflow definition',
    Description: 'A type for storing XAML workflow definitions.',
    Icon: 'workflowdef',
    ParentTypeName: 'File',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display Name',
        Description: 'Content name. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the workflow.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Binary',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BinaryField',
        DisplayName: 'Binary',
        Description: 'The binary content of the document.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'BinaryFieldSetting',
      },
      {
        Name: 'Watermark',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Watermark',
        Description: 'The text that is displayed as a watermark on the document preview. The format can be set by modifying the Document Preview settings.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'ContentWorkflow',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Content workflow',
        Description: 'True for workflow types that are related to one content (e.g. approval or printing). Related content must be an existing content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'AssignableToContentList',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Assignable to content list',
        Description: 'Set this for workflow types that users should be able to assign to content lists (e.g. a Document Library).',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'AbortOnRelatedContentChange',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Abort on related content change',
        Description: 'If set to true workflow will be automatically aborted whenever the Related Content changes.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Delete when completed',
            StoredText: '$Ctd,Enum-WorkflowDefinition-DeleteInstanceAfterFinished-DeleteWhenCompleted',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '1',
            Text: 'Delete when completed or aborted',
            StoredText: '$Ctd,Enum-WorkflowDefinition-DeleteInstanceAfterFinished-DeleteWhenCompletedOrAborted',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Always keep',
            StoredText: '$Ctd,Enum-WorkflowDefinition-DeleteInstanceAfterFinished-AlwaysKeep',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: 'SenseNet.Workflow.WorkflowDeletionStrategy',
        Name: 'DeleteInstanceAfterFinished',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Automatic deletion',
        Description: 'Automatic deletion of the workflow instance when it is finished. Choose the deletion method.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Folder',
    DisplayName: 'Folder',
    Description: 'Use folders to group content.',
    Icon: 'Folder',
    ParentTypeName: 'GenericContent',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Folder name',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Version',
        FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
        DisplayName: 'Version',
        Description: 'Version number.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Index',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Index',
        Description: 'Content order in navigation. Numbers closer to 0 will appear first.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'ArticleSection',
    DisplayName: 'Article Section',
    Description: 'An Article Section is a kind folder that can contain articles and other Article Sections with a default presentation.',
    Icon: 'Folder',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'ArticleSection',
      'Article',
    ],
    FieldSettings: [
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Section title',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Version',
        FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
        DisplayName: 'Version',
        Description: 'Version number.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'Off',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'On',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-2',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableApprovingMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableApprovingModeField',
        DisplayName: 'Content approval',
        Description: 'Specify whether new or changed content below the current one should remain in a draft state until they have been approved.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:ApprovingModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'None',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Major only',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-2',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '3',
            Text: 'Major and minor',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-3',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableVersioningMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableVersioningModeField',
        DisplayName: 'Version history',
        Description: 'Specify whether the system should create a new version whenever you create or modify a content below this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:VersioningModeChoice',
        Type: 'ChoiceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'ContentList',
    DisplayName: 'Content List',
    Description: 'Generic Content List type.',
    Icon: 'ContentList',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display name',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'ContentListDefinition',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'List Definition',
        Description: 'XML definition for additional fields.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'DefaultView',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Default view',
        Description: 'The default View to use.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        AllowMultiple: true,
        AllowedTypes: [
          'ListView',
        ],
        Name: 'AvailableViews',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Available views',
        Description: 'Select global content list views here that you want to offer users to choose from.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        AllowMultiple: true,
        AllowedTypes: [
          'FieldSettingContent',
        ],
        Name: 'FieldSettingContents',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'FieldSetting content',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        AllowMultiple: true,
        AllowedTypes: [
          'FieldSettingContent',
        ],
        Name: 'AvailableContentTypeFields',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Available ContentType Field content.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'ListEmail',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Email address of Content List',
        Description: 'Emails sent to this address will be imported as Email content into the Document Library.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'ExchangeSubscriptionId',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Exchange Subscription Id',
        Description: 'Ctd-ContentListen-USExchangeSubscriptionId-Descriptione',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'OverwriteFiles',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Overwrite files with same name',
        Description: 'If checked new emails and attachments with the same name will overwrite existing items in list. Otherwise increment suffix is used in the name of new mail items.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: 'email',
            Text: 'Save all attachments as children of separate Email content',
            StoredText: '$Ctd-ContentList,GroupAttachments-email',
            Enabled: true,
            Selected: true,
          },
          {
            Value: 'root',
            Text: 'Save all attachments in root',
            StoredText: '$Ctd-ContentList,GroupAttachments-root',
            Enabled: true,
            Selected: false,
          },
          {
            Value: 'subject',
            Text: 'Save all attachments in folders grouped by subject',
            StoredText: '$Ctd-ContentList,GroupAttachments-subject',
            Enabled: true,
            Selected: false,
          },
          {
            Value: 'sender',
            Text: 'Save all attachments in folders grouped by sender',
            StoredText: '$Ctd-ContentList,GroupAttachments-sender',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'GroupAttachments',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Group attachments',
        Description: 'Select the appropriate option to group attachment files under folders or email content or not.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        Name: 'SaveOriginalEmail',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Save original email',
        Description: 'A separate .eml file will be created for every incoming email.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowMultiple: false,
        SelectionRoots: [
          '/Root/System/Schema/ContentTypes/GenericContent/Workflow/MailProcessorWorkflow',
        ],
        Name: 'IncomingEmailWorkflow',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Incoming email workflow',
        Description: 'Select the workflow to be executed on every incoming email.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: '/Root/System/Schema/ContentTypes/GenericContent/Workflow/MailProcessorWorkflow',
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'OnlyFromLocalGroups',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Accept e-mails only from users in local groups',
        Description: 'If set, only users that are members of any local group are able to send e-mails to this library.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'InboxFolder',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Inbox folder',
        Description: 'A relative path of a folder to store incoming e-mails.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'AllowedChildTypes',
        FieldClassName: 'SenseNet.ContentRepository.Fields.AllowedChildTypesField',
        DisplayName: 'Allowed child types',
        Description: 'You can get and set which content types are explicitly allowed to be created under this content. It is a local setting.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'None',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Major only',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-2',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '3',
            Text: 'Major and minor',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-3',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableVersioningMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableVersioningModeField',
        DisplayName: 'Version history',
        Description: 'Specify whether the system should create a new version whenever you create or modify a content below this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:VersioningModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'Off',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'On',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-2',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableApprovingMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableApprovingModeField',
        DisplayName: 'Content approval',
        Description: 'Specify whether new or changed content below the current one should remain in a draft state until they have been approved.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:ApprovingModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'User',
        ],
        SelectionRoots: [
          '/Root/IMS',
        ],
        Name: 'OwnerWhenVisitor',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Owner of items created by visitor',
        Description: 'If a Visitor adds content to this list, this user will be set as the creator instead of the Visitor. This prevents visitors see each others\' content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: '/Root/IMS/BuiltIn/Portal/Admin',
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Aspect',
    DisplayName: 'Aspect',
    Description: 'Aspect base type.',
    Icon: 'Aspect',
    ParentTypeName: 'ContentList',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Aspect title',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'AspectDefinition',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Aspect definition',
        Description: 'Definition of the extension in XML format.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'DefaultView',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Default view',
        Description: 'The default View to use.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        AllowMultiple: true,
        AllowedTypes: [
          'ListView',
        ],
        Name: 'AvailableViews',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Available views',
        Description: 'Select global content list views here that you want to offer users to choose from.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        AllowMultiple: true,
        AllowedTypes: [
          'FieldSettingContent',
        ],
        Name: 'FieldSettingContents',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'FieldSetting content',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        AllowMultiple: true,
        AllowedTypes: [
          'FieldSettingContent',
        ],
        Name: 'AvailableContentTypeFields',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Available ContentType Field content.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'ListEmail',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Email address of Content List',
        Description: 'Emails sent to this address will be imported as Email content into the Document Library.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'ExchangeSubscriptionId',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Exchange Subscription Id',
        Description: 'Ctd-ContentListen-USExchangeSubscriptionId-Descriptione',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'OverwriteFiles',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Overwrite files with same name',
        Description: 'If checked new emails and attachments with the same name will overwrite existing items in list. Otherwise increment suffix is used in the name of new mail items.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: 'email',
            Text: 'Save all attachments as children of separate Email content',
            StoredText: '$Ctd-ContentList,GroupAttachments-email',
            Enabled: true,
            Selected: true,
          },
          {
            Value: 'root',
            Text: 'Save all attachments in root',
            StoredText: '$Ctd-ContentList,GroupAttachments-root',
            Enabled: true,
            Selected: false,
          },
          {
            Value: 'subject',
            Text: 'Save all attachments in folders grouped by subject',
            StoredText: '$Ctd-ContentList,GroupAttachments-subject',
            Enabled: true,
            Selected: false,
          },
          {
            Value: 'sender',
            Text: 'Save all attachments in folders grouped by sender',
            StoredText: '$Ctd-ContentList,GroupAttachments-sender',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'GroupAttachments',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Group attachments',
        Description: 'Select the appropriate option to group attachment files under folders or email content or not.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        Name: 'SaveOriginalEmail',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Save original email',
        Description: 'A separate .eml file will be created for every incoming email.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowMultiple: false,
        SelectionRoots: [
          '/Root/System/Schema/ContentTypes/GenericContent/Workflow/MailProcessorWorkflow',
        ],
        Name: 'IncomingEmailWorkflow',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Incoming email workflow',
        Description: 'Select the workflow to be executed on every incoming email.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: '/Root/System/Schema/ContentTypes/GenericContent/Workflow/MailProcessorWorkflow',
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'AllowedChildTypes',
        FieldClassName: 'SenseNet.ContentRepository.Fields.AllowedChildTypesField',
        DisplayName: 'Allowed child types',
        Description: 'You can get and set which content types are explicitly allowed to be created under this content. It is a local setting.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'None',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Major only',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-2',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '3',
            Text: 'Major and minor',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-3',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableVersioningMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableVersioningModeField',
        DisplayName: 'Version history',
        Description: 'Specify whether the system should create a new version whenever you create or modify a content below this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:VersioningModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'Off',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'On',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-2',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableApprovingMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableApprovingModeField',
        DisplayName: 'Content approval',
        Description: 'Specify whether new or changed content below the current one should remain in a draft state until they have been approved.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:ApprovingModeChoice',
        Type: 'ChoiceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'ItemList',
    DisplayName: 'ItemList',
    Description: 'Base type for item lists. Choose a type inheriting from this to create list of items.',
    Icon: 'ContentList',
    ParentTypeName: 'ContentList',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        AllowMultiple: false,
        AllowedTypes: [
          'User',
        ],
        SelectionRoots: [
          '/Root/IMS',
        ],
        Name: 'OwnerWhenVisitor',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Owner of items created by visitor',
        Description: 'If a Visitor adds content to this list, this user will be set as the creator instead of the Visitor. This prevents visitors see each others\' content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: '/Root/IMS/BuiltIn/Portal/Admin',
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'None',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Major only',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-2',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '3',
            Text: 'Major and minor',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-3',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableVersioningMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableVersioningModeField',
        DisplayName: 'Version history',
        Description: 'Specify whether the system should create a new version whenever you create or modify a content under this list.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:VersioningModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'Off',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'On',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-2',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableApprovingMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableApprovingModeField',
        DisplayName: 'Content approval',
        Description: 'Specify whether new or changed content under this list should remain draft until approved.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:ApprovingModeChoice',
        Type: 'ChoiceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'CustomList',
    DisplayName: 'Custom List',
    Description: 'Use this type to create custom Lists of content with user-defined columns.',
    Icon: 'ContentList',
    ParentTypeName: 'ItemList',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'ListItem',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'EventList',
    DisplayName: 'Event List',
    Description: 'A special List type to store schedule Events.',
    Icon: 'ContentList',
    ParentTypeName: 'ItemList',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'CalendarEvent',
    ],
    FieldSettings: [
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Calendar name',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        DefaultValue: 'Calendar',
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'ContentListDefinition',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'List Definition',
        Description: 'XML definition for additional fields.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'Folder',
        ],
        Name: 'RegistrationFolder',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Registration folder',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'Version',
        FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
        DisplayName: 'Version',
        Description: 'Version number.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'None',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Major only',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-2',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '3',
            Text: 'Major and minor',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-3',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableVersioningMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableVersioningModeField',
        DisplayName: 'Version history',
        Description: 'Specify whether the system should create a new version whenever you create or modify a content under this list.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:VersioningModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'Off',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'On',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-2',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableApprovingMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableApprovingModeField',
        DisplayName: 'Content approval',
        Description: 'Specify whether new or changed content under this list should remain draft until approved.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:ApprovingModeChoice',
        Type: 'ChoiceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'LinkList',
    DisplayName: 'Link List',
    Description: 'A List type for storing Links.',
    Icon: 'ContentList',
    ParentTypeName: 'ItemList',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Link',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'MemoList',
    DisplayName: 'Memo List',
    Description: 'A List type for storing Memos.',
    Icon: 'ContentList',
    ParentTypeName: 'ItemList',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Memo',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'TaskList',
    DisplayName: 'Task list',
    Description: 'A List type for storing Tasks.',
    Icon: 'ContentList',
    ParentTypeName: 'ItemList',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Task',
      'ApprovalWorkflowTask',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'Library',
    DisplayName: 'Library',
    Description: 'A base class for special List types for storing documents such as Document Library or Image Library.',
    Icon: 'ContentList',
    ParentTypeName: 'ContentList',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'None',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Major only',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-2',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '3',
            Text: 'Major and minor',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-3',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableVersioningMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableVersioningModeField',
        DisplayName: 'Version history',
        Description: 'Specify whether the system should create a new version whenever you create or modify a content under this library.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:VersioningModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'Off',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'On',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-2',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableApprovingMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableApprovingModeField',
        DisplayName: 'Content approval',
        Description: 'Specify whether new or changed content under this library should remain draft until approved.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:ApprovingModeChoice',
        Type: 'ChoiceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'DocumentLibrary',
    DisplayName: 'Document library',
    Description: 'A special List for storing documents.',
    Icon: 'ContentList',
    ParentTypeName: 'Library',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Folder',
      'File',
      'SmartFolder',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'ImageLibrary',
    DisplayName: 'Image library',
    Description: 'A special List for storing images.',
    Icon: 'ContentList',
    ParentTypeName: 'Library',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Folder',
      'Image',
    ],
    FieldSettings: [
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'Image',
        ],
        Name: 'CoverImage',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Cover image',
        Description: 'Select cover image',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'ContentViews',
    DisplayName: 'Content Views',
    Description: 'This is the container type for ContentViews. Instances are only allowed at /Root/Global/contentviews.',
    Icon: 'Folder',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'ContentView',
      'ContentViews',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'Device',
    DisplayName: 'Device',
    Description: 'This content type is for defining different devices to browse the portal from - e.g. tablet or different phone types.',
    Icon: 'Device',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'UserAgentPattern',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'User agent string',
        Description: 'A regular expression to match the user agent string of the browser.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'DocumentWorkspaceFolder',
    DisplayName: 'Document Workspace Folder',
    Description: 'This is the container type for Document Workspace.',
    Icon: 'Folder',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'DocumentWorkspace',
      'DocumentWorkspaceFolder',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'Domain',
    DisplayName: 'Domain',
    Description: 'A centrally-managed group of users and/or computers. Sense/Net ECMS has a built-in domain (BuiltIn), but you can syncronyze external LDAP directories as well.',
    Icon: 'Domain',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'User',
      'Group',
      'OrganizationalUnit',
    ],
    FieldSettings: [
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display Name',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'SyncGuid',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'SyncGuid',
        Description: 'GUID of corresponding AD object.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'LastSync',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'LastSync',
        Description: 'Date of last synchronization.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Domains',
    DisplayName: 'Domains',
    Description: 'This is the container type for Domains. Only a single instance is allowed at /Root/IMS.',
    Icon: 'Folder',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Domain',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'Email',
    DisplayName: 'Email',
    Description: 'Email content type containing attachments as children content.',
    Icon: 'Document',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: true,
    AllowedChildTypes: [
      'File',
    ],
    FieldSettings: [
      {
        Name: 'From',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'From',
        Description: 'Sender name and address.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Subject',
        Description: 'Subject of email.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        TextType: 1,
        Name: 'Body',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Body',
        Description: 'Body of email.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'Sent',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Sent',
        Description: 'Date of sending.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'FieldControlTemplates',
    DisplayName: 'FieldControlTemplates',
    Description: 'This is the container type for ContentViews. Instances are allowed only at /Root/Global/fieldcontroltemplates.',
    Icon: 'Folder',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'FieldControlTemplates',
      'FieldControlTemplate',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'OrganizationalUnit',
    DisplayName: 'Organizational Unit',
    Description: 'Organizational Unit (OU) provides a way of classifying objects located in directories.',
    Icon: 'OrgUnit',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'User',
      'Group',
      'OrganizationalUnit',
    ],
    FieldSettings: [
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Folder name',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'SyncGuid',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'SyncGuid',
        Description: 'GUID of corresponding AD object.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'LastSync',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'LastSync',
        Description: 'Date of last synchronization.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'PortalRoot',
    DisplayName: 'Root',
    Description: 'Sense/Net Content Repository Master node. One installation can have only one Portal Root.',
    Icon: 'PortalRoot',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Folder',
      'SystemFolder',
      'TrashBin',
      'ContentList',
      'CustomList',
      'Sites',
      'Domains',
      'Profiles',
      'Resources',
      'Workspace',
      'DocumentLibrary',
      'Portlets',
      'Skins',
      'DocumentWorkspaceFolder',
      'DocumentWorkspace',
      'ProjectWorkspaceFolder',
      'ProjectWorkspace',
      'SalesWorkspaceFolder',
      'SalesWorkspace',
    ],
    FieldSettings: [
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Folder name',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'PortletCategory',
    DisplayName: 'PortletCategory',
    Description: 'Organize portlets under categories.',
    Icon: 'Folder',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Portlet',
      'Image',
    ],
    FieldSettings: [
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display Name',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description of category',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Hidden',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Hidden',
        Description: 'Doesn\'t show up in Add portlet dialog if checked.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'ProfileDomain',
    DisplayName: 'ProfileDomain',
    Description: 'Container for user profiles.',
    Icon: 'Domain',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'UserProfile',
    ],
    FieldSettings: [
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display Name',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Profiles',
    DisplayName: 'Profiles',
    Description: 'This is the container type for profiles. Only a single instance is allowed at /Root/Profiles.',
    Icon: 'Folder',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'ProfileDomain',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'ProjectWorkspaceFolder',
    DisplayName: 'Project Workspace Folder',
    Description: 'This is the container type for Project Workspace.',
    Icon: 'Folder',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'ProjectWorkspace',
      'ProjectWorkspaceFolder',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'RuntimeContentContainer',
    DisplayName: 'Runtime Content Container',
    Description: 'For internal use only.',
    Icon: 'Folder',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'SalesWorkspaceFolder',
    DisplayName: 'Sales Workspace Folder',
    Description: 'This is the container type for Sales Workspace.',
    Icon: 'Folder',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'SalesWorkspace',
      'SalesWorkspaceFolder',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'Sites',
    DisplayName: 'Sites',
    Description: 'This is the container type for sites. Only a single instance is allowed at /Root/Sites.',
    Icon: 'Site',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Site',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'SmartFolder',
    DisplayName: 'Smart Folder',
    Description: 'Use smart folders to group information (content) by Repository query.',
    Icon: 'SmartFolder',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Query',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Query',
        Description: 'Please give a query here that you want to use for collecting the children of this smart folder.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:QueryBuilder',
        Type: 'LongTextFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Default',
            StoredText: '$Ctd,Enum-SmartFolder-EnableAutofilters-Default',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '1',
            Text: 'Enabled',
            StoredText: '$Ctd,Enum-SmartFolder-EnableAutofilters-Enabled',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Disabled',
            StoredText: '$Ctd,Enum-SmartFolder-EnableAutofilters-Disabled',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: 'SenseNet.Search.FilterStatus',
        Name: 'EnableAutofilters',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Enable autofilters',
        Description: 'If autofilters are enabled, system content will be filtered from the query.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Default',
            StoredText: '$Ctd,Enum-SmartFolder-EnableLifespanFilter-Default',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '1',
            Text: 'Enabled',
            StoredText: '$Ctd,Enum-SmartFolder-EnableLifespanFilter-Enabled',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Disabled',
            StoredText: '$Ctd,Enum-SmartFolder-EnableLifespanFilter-Disabled',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: 'SenseNet.Search.FilterStatus',
        Name: 'EnableLifespanFilter',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Enable lifespan filter',
        Description: 'If lifespan filter is enabled, only valid content will be in the result.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'TrashBag',
    DisplayName: 'Trash Bag',
    Description: 'An atomic container for deleted items stored for undeletion.',
    Icon: 'Folder',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: true,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display Name',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'KeepUntil',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Keep until',
        Description: 'The bag must be kept until this date.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'OriginalPath',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Original path',
        Description: 'The path where the bag content were deleted from.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'WorkspaceRelativePath',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Ctd-TrashBagen-USWorkspaceRelativePath-DisplayName',
        Description: 'Ctd-TrashBagen-USWorkspaceRelativePath-Description',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'WorkspaceId',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Ctd-TrashBagen-USWorkspaceId-DisplayName',
        Description: 'Ctd-TrashBagen-USWorkspaceId-Description',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        AllowMultiple: false,
        Name: 'DeletedContent',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Deleted content',
        Description: 'The actual deleted content inside this trash bag.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Workspace',
    DisplayName: 'Workspace',
    Description: 'Collaborative workspace root.',
    Icon: 'Workspace',
    ParentTypeName: 'Folder',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Page',
      'Folder',
      'DocumentLibrary',
      'ImageLibrary',
      'EventList',
      'MemoList',
      'LinkList',
      'TaskList',
      'CustomList',
      'Workspace',
    ],
    FieldSettings: [
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display name',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'User',
        ],
        SelectionRoots: [
          '/Root/IMS',
          '/Root',
        ],
        Name: 'Manager',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Project manager',
        Description: 'The person responsible for the project.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'Deadline',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Project deadline',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'IsActive',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Active',
        Description: 'This workspace is currently active.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        DefaultValue: 'true',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'Skin',
        ],
        SelectionRoots: [
          '/Root/Skins',
        ],
        Name: 'WorkspaceSkin',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Skin',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'IsCritical',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Is critical',
        Description: 'This workspace is currently in a critical status.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 0,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'IsWallContainer',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Wall Container',
        Description: 'This workspace is configured to contain a wall - this indicates that posts are created under this workspace if Content are shared anywhere below this path.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'AllowedChildTypes',
        FieldClassName: 'SenseNet.ContentRepository.Fields.AllowedChildTypesField',
        DisplayName: 'Allowed child types',
        Description: 'You can get and set which content types are explicitly allowed to be created under this content. It is a local setting.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'None',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Major only',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-2',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '3',
            Text: 'Major and minor',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-3',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableVersioningMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableVersioningModeField',
        DisplayName: 'Version history',
        Description: 'Specify whether the system should create a new version whenever you create or modify a content under this workspace.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:VersioningModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'Off',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'On',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-2',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableApprovingMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableApprovingModeField',
        DisplayName: 'Content approval',
        Description: 'Specify whether new or changed content under this workspace should remain draft until approved.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:ApprovingModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        Name: 'IsFollowed',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'DocumentWorkspace',
    DisplayName: 'Document workspace',
    Description: 'A workspace for document-based cooperation.',
    Icon: 'workspace-document',
    ParentTypeName: 'Workspace',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Folder',
      'DocumentLibrary',
      'ImageLibrary',
      'EventList',
      'MemoList',
      'LinkList',
      'TaskList',
      'CustomList',
    ],
    FieldSettings: [],
  },
  {
    ContentTypeName: 'ProjectWorkspace',
    DisplayName: 'Project workspace',
    Description: 'A workspace for project-oriented cooperation.',
    Icon: 'workspace-project',
    ParentTypeName: 'Workspace',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Folder',
      'DocumentLibrary',
      'ImageLibrary',
      'EventList',
      'MemoList',
      'LinkList',
      'TaskList',
      'CustomList',
    ],
    FieldSettings: [
      {
        MinValue: 0.0,
        MaxValue: 1.0,
        Digits: 2,
        ShowAsPercentage: true,
        Name: 'Completion',
        FieldClassName: 'SenseNet.ContentRepository.Fields.NumberField',
        DisplayName: 'Completion',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NumberFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'SalesWorkspace',
    DisplayName: 'Sales workspace',
    Description: 'A workspace for sales-oriented cooperation.',
    Icon: 'workspace-sales',
    ParentTypeName: 'Workspace',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Folder',
      'DocumentLibrary',
      'ImageLibrary',
      'EventList',
      'MemoList',
      'LinkList',
      'TaskList',
      'CustomList',
    ],
    FieldSettings: [
      {
        AllowMultiple: false,
        AllowedTypes: [
          'User',
        ],
        SelectionRoots: [
          '/Root/IMS',
          '/Root',
        ],
        Name: 'Manager',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Responsible salesperson',
        Description: 'The person responsible for the project.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'Customer',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Customer',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Format: 'en-US',
        MinValue: 0.0,
        Digits: 0,
        Name: 'ExpectedRevenue',
        FieldClassName: 'SenseNet.ContentRepository.Fields.CurrencyField',
        DisplayName: 'Expected revenue',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'CurrencyFieldSetting',
      },
      {
        MinValue: 0.0,
        MaxValue: 1.0,
        Digits: 2,
        ShowAsPercentage: true,
        Name: 'ChanceOfWinning',
        FieldClassName: 'SenseNet.ContentRepository.Fields.NumberField',
        DisplayName: 'Chance of winning',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NumberFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'StartDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Start date',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: '[Script:jScript] DateTime.UtcNow; [/Script]',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'Deadline',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Deadline for submission',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: '[Script:jScript] DateTime.UtcNow.AddDays(7); [/Script]',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'Contacts',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Contacts',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Notes',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Notes',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        MinValue: 0.0,
        MaxValue: 1.0,
        Digits: 2,
        ShowAsPercentage: true,
        Name: 'Completion',
        FieldClassName: 'SenseNet.ContentRepository.Fields.NumberField',
        DisplayName: 'Progress',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NumberFieldSetting',
      },
      {
        Name: 'ContractSigned',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Contract signed',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'ContractSignedDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Contract signed date',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Site',
    DisplayName: 'Site',
    Description: 'The Site provides a primary entry point to your Portal.',
    Icon: 'Site',
    ParentTypeName: 'Workspace',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'Folder',
      'Workspace',
      'Profiles',
      'Image',
      'DocumentLibrary',
      'ImageLibrary',
      'MemoList',
      'TaskList',
      'CustomList',
      'SmartFolder',
      'Page',
    ],
    FieldSettings: [
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display name of the Site',
        Description: 'This name will appear when the site is presented somewhere.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: 'en',
            Text: 'English',
            StoredText: '$Ctd-Site,Language-En',
            Enabled: true,
            Selected: true,
          },
          {
            Value: 'hu',
            Text: 'Hungarian',
            StoredText: '$Ctd-Site,Language-Hu',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'Language',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Language',
        Description: 'Please define the default language of this site.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        Name: 'EnableClientBasedCulture',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Enable client-based culture',
        Description: 'Enable this to allow user browser settings override default site language settings.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'EnableUserBasedCulture',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Enable user-based culture',
        Description: 'Enable this to allow user language settings override default site language settings.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'UrlList',
        FieldClassName: 'SenseNet.ContentRepository.Fields.UrlListField',
        DisplayName: 'URL list',
        Description: 'Select the URLs to associate with this Site.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowMultiple: false,
        SelectionRoots: [
          '.',
        ],
        Name: 'StartPage',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Alternative start page',
        Description: 'If set, the site will use this start page instead of the default.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        AllowMultiple: false,
        SelectionRoots: [
          '.',
        ],
        Name: 'LoginPage',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Login page',
        Description: 'The login page to display when a user tries to access restricted Content (Forms authentication only).',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'IsActive',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Active',
        Description: 'This workspace is currently active.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        DefaultValue: 'true',
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'Skin',
        ],
        SelectionRoots: [
          '/Root/Skins',
        ],
        Name: 'SiteSkin',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Skin',
        Description: '',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'Skin',
        ],
        SelectionRoots: [
          '/Root/Skins',
        ],
        Name: 'WorkspaceSkin',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Skin',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'IsWallContainer',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Wall Container',
        Description: 'This workspace is configured to contain a wall - this indicates that posts are created under this workspace if Content are shared anywhere below this path.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'IsCritical',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Is critical',
        Description: 'This workspace is currently in a critical status.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'User',
        ],
        SelectionRoots: [
          '/Root/IMS',
          '/Root',
        ],
        Name: 'Manager',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Project manager',
        Description: 'The person responsible for the project.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'Deadline',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Project deadline',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'DenyCrossSiteAccess',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Deny cross-site access',
        Description: 'If set, content under this site can only be accessed via this site and not via other sites using a Root relative path.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'None',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Major only',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-2',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '3',
            Text: 'Major and minor',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-3',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'InheritableVersioningMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableVersioningModeField',
        DisplayName: 'Version history',
        Description: 'Specify whether the system should create a new version whenever you create or modify a content under this site.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:VersioningModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'Off',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'On',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-2',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'InheritableApprovingMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableApprovingModeField',
        DisplayName: 'Content approval',
        Description: 'Specify whether new or changed content under this site should remain draft until approved.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:ApprovingModeChoice',
        Type: 'ChoiceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'TrashBin',
    DisplayName: 'TrashBin',
    Description: 'The system trash bin content type.',
    Icon: 'trash',
    ParentTypeName: 'Workspace',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'TrashBag',
    ],
    FieldSettings: [
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display name',
        Description: 'Display name of the content. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Index',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Index',
        Description: 'Content order in navigation. Numbers closer to 0 will appear first.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'None',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Major only',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-2',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '3',
            Text: 'Major and minor',
            StoredText: '$Ctd-GenericContent,InheritableVersioningMode-3',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableVersioningMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableVersioningModeField',
        DisplayName: 'Version history',
        Description: 'Specify whether the system should create a new version whenever you create or modify a content under this workspace.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:VersioningModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '0',
            Text: 'Inherited',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-0',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '1',
            Text: 'Off',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'On',
            StoredText: '$Ctd-GenericContent,InheritableApprovingMode-2',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        Name: 'InheritableApprovingMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.InheritableApprovingModeField',
        DisplayName: 'Content approval',
        Description: 'Specify whether new or changed content under this workspace should remain draft until approved.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:ApprovingModeChoice',
        Type: 'ChoiceFieldSetting',
      },
      {
        Name: 'IsActive',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Enabled',
        Description: 'Unselect this checkbox to disable trash functionality system-wide.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: 'true',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        MinValue: 0,
        Name: 'MinRetentionTime',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Minimum retention time (in days)',
        Description: '',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        MinValue: 0,
        Name: 'SizeQuota',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Size quota',
        Description: 'Set the size quote for the trash bin (Megabytes).',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        MinValue: 0,
        Name: 'BagCapacity',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Trashbag capacity',
        Description: 'The maximum number of nodes accepted for trash in a single operation.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: '100',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'TrashDisabled',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Disable Trash',
        Description: 'You can disable trash for this content and its children. If set, you can not restore deleted content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: 'true',
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'IsWallContainer',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Wall Container',
        Description: 'This workspace is configured to contain a wall - this indicates that posts are created under this workspace if Content are shared anywhere below this path.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'IsCritical',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Is critical',
        Description: 'This workspace is currently in a critical status.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'User',
        ],
        SelectionRoots: [
          '/Root/IMS',
          '/Root',
        ],
        Name: 'Manager',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Project manager',
        Description: 'The person responsible for the project.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'Deadline',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Project deadline',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'Skin',
        ],
        SelectionRoots: [
          '/Root/Skins',
        ],
        Name: 'WorkspaceSkin',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Skin',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'Version',
        FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
        DisplayName: 'Version',
        Description: 'Version number.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'UserProfile',
    DisplayName: 'User profile',
    Description: 'Workspace for handling all information and data for a user.',
    Icon: 'UserProfile',
    ParentTypeName: 'Workspace',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [
      'DocumentLibrary',
      'EventList',
      'MemoList',
      'LinkList',
      'TaskList',
      'ImageLibrary',
      'CustomList',
    ],
    FieldSettings: [
      {
        Name: 'IsWallContainer',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Wall Container',
        Description: 'This workspace is configured to contain a wall - this indicates that posts are created under this workspace if Content are shared anywhere below this path.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: 'true',
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'IsCritical',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Is critical',
        Description: 'This workspace is currently in a critical status.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'User',
        ],
        SelectionRoots: [
          '/Root/IMS',
          '/Root',
        ],
        Name: 'Manager',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Project manager',
        Description: 'The person responsible for the project.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'Deadline',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Project deadline',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'IsActive',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Active',
        Description: 'This workspace is currently active.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        DefaultValue: 'true',
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'User',
        ],
        SelectionRoots: [
          '/Root/IMS',
        ],
        Name: 'User',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'User',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'ListItem',
    DisplayName: 'List Item',
    Description: 'Base content type for list items.',
    Icon: 'FormItem',
    ParentTypeName: 'GenericContent',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 3,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'ModifiedBy',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Modified By',
        Description: 'Content was last modified by this user.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'ModificationDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Modification Date',
        Description: 'Content was last modified on this date.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'CalendarEvent',
    DisplayName: 'Calendar Event',
    Description: 'A content type for defining calendar events.',
    Icon: 'CalendarEvent',
    ParentTypeName: 'ListItem',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Event title',
        Description: 'Content name. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Location',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Location',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'StartDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Start date',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        DefaultValue: '[Script:jScript] DateTime.UtcNow; [/Script]',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'EndDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'End date',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        DefaultValue: '[Script:jScript] DateTime.UtcNow; [/Script]',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'Lead',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Lead',
        Description: 'Short lead of the event.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Detailed description of the event.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 3,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'AllDay',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'All-day event',
        Description: 'The event encompasses one or more entire days.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'EventUrl',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'URL',
        Description: 'Further information on event.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'RequiresRegistration',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Requires registration',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        AllowMultiple: false,
        AllowedTypes: [
          'EventRegistrationForm',
        ],
        SelectionRoots: [
          '/Root',
        ],
        Name: 'RegistrationForm',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Registration form',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'OwnerEmail',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Event owner\'s e-mail',
        Description: 'The list of email addresses to where a notification message containing submitted values are sent after submitting the form. The addresses should be separated by ";", "," or new line.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: 'E-mail',
            Text: 'Email',
            StoredText: '$Ctd-CalendarEvent,NotificationMode-Email',
            Enabled: true,
            Selected: true,
          },
          {
            Value: 'E-mail digest',
            Text: 'Email Digest',
            StoredText: '$Ctd-CalendarEvent,NotificationMode-EmailDigest',
            Enabled: true,
            Selected: false,
          },
          {
            Value: 'None',
            Text: 'None',
            StoredText: '$Ctd-CalendarEvent,NotificationMode-None',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'NotificationMode',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Notification mode',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        Name: 'EmailTemplate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Email template',
        Description: 'The template of the email message sent to the administrators. By default the template of notification email sent to the submitter is the same as the one sent to the recipients given in the email list above. Form content can be inserted with the "{0}" string.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'EmailTemplateSubmitter',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Submitter email template',
        Description: 'The template of the email message sent to the submitter. By default the template of notification email sent to the submitter is the same as the one sent to the recipients given in the email list above. Form content can be inserted with the "{0}" string.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'EmailFrom',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Email from',
        Description: 'This address is displayed in the "From" field of the notification email sen to the admin.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'EmailFromSubmitter',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Subbmitter email from',
        Description: 'This address is displayed in the "From" field of the user notification email sent to submitters. Default is "mailerservice@example.com".',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'EmailField',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Email field',
        Description: 'The name of the field specified among ContentList fields containing the submitter\'s email address. Ie.: "#Email" or "#SubmitterEmail".',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'MaxParticipants',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Max Participants',
        Description: 'The maximum number of participants which can apply for the event.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'NumParticipants',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Current number of participants',
        Description: 'Current number of participants',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'Version',
        FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
        DisplayName: 'Version',
        Description: 'Version number.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Index',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Index',
        Description: 'Content order in navigation. Numbers closer to 0 will appear first.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: 'Deadline',
            Text: 'Deadline',
            StoredText: '$Ctd-CalendarEvent,EventType-Deadline',
            Enabled: true,
            Selected: true,
          },
          {
            Value: 'Meeting',
            Text: 'Meeting',
            StoredText: '$Ctd-CalendarEvent,EventType-Meeting',
            Enabled: true,
            Selected: false,
          },
          {
            Value: 'Demo',
            Text: 'Demo',
            StoredText: '$Ctd-CalendarEvent,EventType-Demo',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'EventType',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Event type',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'ConfirmationItem',
    DisplayName: 'Confirmation item',
    Description: 'A content placeholder for delayed confirmation of a workflow operation.',
    Icon: 'FormItem',
    ParentTypeName: 'ListItem',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Confirmed',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Confirmed',
        Description: 'Set to true to confirm the operation.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'CustomListItem',
    DisplayName: 'Custom Listitem',
    Description: 'Content type for custom listitems.',
    Icon: 'FormItem',
    ParentTypeName: 'ListItem',
    AllowIndexing: true,
    AllowIncrementalNaming: true,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'WorkflowsRunning',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Version',
        FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
        DisplayName: 'Version',
        Description: 'Version number.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display Name',
        Description: 'Content name. You can set any name you prefer without any restrictions.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 3,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'ModifiedBy',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Modified By',
        Description: 'Content was last modified by this user.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'ModificationDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Modification Date',
        Description: 'Content was last modified on this date.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'Index',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Index',
        Description: 'Content order in navigation. Numbers closer to 0 will appear first.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Link',
    DisplayName: 'Link',
    Description: 'A link that navigates to an URL.',
    Icon: 'link',
    ParentTypeName: 'ListItem',
    AllowIndexing: true,
    AllowIncrementalNaming: true,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Description',
        Description: 'Enter a short description here.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: '',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Regex: '^(http|https)\\://([a-zA-Z0-9\\.\\-]+(\\:[a-zA-Z0-9\\.&%\\$\\-]+)*@)*((25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9])\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[1-9]|0)\\.(25[0-5]|2[0-4][0-9]|[0-1]{1}[0-9]{2}|[1-9]{1}[0-9]{1}|[0-9])|localhost|([a-zA-Z0-9\\-]+\\.)*[a-zA-Z0-9\\-]+(\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|hu|[a-zA-Z]{2})){0,1})(\\:[0-9]+)*((\\#|/)($|[a-zA-Z0-9\\.\\,\\?\\\'\\\\\\+&%\\$#\\=~_\\-]+))*$',
        Name: 'Url',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'URL',
        Description: 'Type a URL to this field to represent a link to that URL.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: 'http://',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Notes',
        Description: 'Write your notes here.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 3,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Version',
        FieldClassName: 'SenseNet.ContentRepository.Fields.VersionField',
        DisplayName: 'Version',
        Description: 'Version number.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Index',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Index',
        Description: 'Content order in navigation. Numbers closer to 0 will appear first.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'Locked',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Locked',
        Description: 'It shows whether the content is checked out or not.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'ModifiedBy',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Modified By',
        Description: 'Content was last modified by this user.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'ModificationDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Modification Date',
        Description: 'Content was last modified on this date.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Memo',
    DisplayName: 'Memo',
    Description: 'A content type for short memos or posts on a subject.',
    Icon: 'Document',
    ParentTypeName: 'ListItem',
    AllowIndexing: true,
    AllowIncrementalNaming: true,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Body',
        Description: 'Type your message here.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 3,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'Date',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Date',
        Description: 'Please set the due date of the memo.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: '[Script:jScript] DateTime.UtcNow; [/Script]',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        AllowExtraValue: true,
        AllowMultiple: false,
        Options: [
          {
            Value: 'generic',
            Text: 'Generic',
            StoredText: '$Ctd-Memo,MemoType-generic',
            Enabled: true,
            Selected: true,
          },
          {
            Value: 'iso',
            Text: 'ISO',
            StoredText: '$Ctd-Memo,MemoType-iso',
            Enabled: true,
            Selected: false,
          },
          {
            Value: 'iaudit',
            Text: 'Internal audit',
            StoredText: '$Ctd-Memo,MemoType-iaudit',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'MemoType',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Memo type',
        Description: 'Type of the memo.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowMultiple: true,
        Name: 'SeeAlso',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'See also...',
        Description: 'A list of content this memo pertains to.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Portlet',
    DisplayName: 'Portlet',
    Description: 'Portlet that can be selected in the \'Add new portlet\' dialog.',
    Icon: 'FormItem',
    ParentTypeName: 'ListItem',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Description',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Description',
        Description: 'Description of the content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 3,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'TypeName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Fully qualified type name',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        AllowMultiple: false,
        Name: 'ImageRef',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Thumbnail image of portlet (reference)',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'ImageData',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BinaryField',
        DisplayName: 'Thumbnail image of portlet (binarydata)',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'BinaryFieldSetting',
      },
      {
        Name: 'PortletImage',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ImageField',
        DisplayName: 'Thumbnail image of portlet',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:Image',
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Hidden',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Hidden',
        Description: 'Doesn\'t show up in Add portlet dialog if checked.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Task',
    DisplayName: 'Task',
    Description: 'A content type for defining tasks.',
    Icon: 'FormItem',
    ParentTypeName: 'ListItem',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 2,
        VisibleEdit: 2,
        VisibleNew: 2,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'StartDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Start date',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'DueDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Due date',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        AllowMultiple: true,
        AllowedTypes: [
          'User',
        ],
        SelectionRoots: [
          '/Root/IMS',
          '/Root',
        ],
        Name: 'AssignedTo',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Assigned to',
        Description: 'List of internal stakeholders.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: '1',
            Text: 'Urgent',
            StoredText: '$Ctd-Task,Priority-1',
            Enabled: true,
            Selected: false,
          },
          {
            Value: '2',
            Text: 'Normal',
            StoredText: '$Ctd-Task,Priority-2',
            Enabled: true,
            Selected: true,
          },
          {
            Value: '3',
            Text: 'Not urgent',
            StoredText: '$Ctd-Task,Priority-3',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'Priority',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Priority',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: 'pending',
            Text: 'Pending',
            StoredText: '$Ctd-Task,Status-pending',
            Enabled: true,
            Selected: false,
          },
          {
            Value: 'active',
            Text: 'Active',
            StoredText: '$Ctd-Task,Status-active',
            Enabled: true,
            Selected: true,
          },
          {
            Value: 'completed',
            Text: 'Completed',
            StoredText: '$Ctd-Task,Status-completed',
            Enabled: true,
            Selected: false,
          },
          {
            Value: 'deferred',
            Text: 'Deferred',
            StoredText: '$Ctd-Task,Status-deferred',
            Enabled: true,
            Selected: false,
          },
          {
            Value: 'waiting',
            Text: 'Waiting',
            StoredText: '$Ctd-Task,Status-waiting',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'Status',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Status',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        MinValue: 0,
        MaxValue: 100,
        ShowAsPercentage: true,
        Name: 'TaskCompletion',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Completion',
        Description: 'Completion percentage of the task.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'RemainingDays',
        FieldClassName: 'SenseNet.ContentRepository.Fields.IntegerField',
        DisplayName: 'Remaining days',
        Description: 'Number of remaining days.',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'IntegerFieldSetting',
      },
      {
        Name: 'DueText',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'DueText',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'DueCssClass',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Due style',
        Description: 'Css class',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'ApprovalWorkflowTask',
    DisplayName: 'Approval Workflow Task',
    Description: 'A content representation for a delayed user interaction in a Workflow.',
    Icon: 'FormItem',
    ParentTypeName: 'Task',
    AllowIndexing: true,
    AllowIncrementalNaming: true,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'Name',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Name',
        Description: 'Specify a name that will appear in the address bar of the browser.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        ControlHint: 'sn:Name',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Comment',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Comment',
        Description: 'Type the reason for your decision here.',
        ReadOnly: false,
        Compulsory: true,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        AllowExtraValue: false,
        AllowMultiple: false,
        Options: [
          {
            Value: 'yes',
            Text: 'Approved',
            StoredText: '$Ctd-ApprovalWorkflowTask,Result-Approved',
            Enabled: true,
            Selected: false,
          },
          {
            Value: 'no',
            Text: 'Rejected',
            StoredText: '$Ctd-ApprovalWorkflowTask,Result-Rejected',
            Enabled: true,
            Selected: false,
          },
        ],
        DisplayChoice: 0,
        EnumTypeName: '',
        Name: 'Result',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ChoiceField',
        DisplayName: 'Answer',
        Description: 'Select your answer here.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ChoiceFieldSetting',
      },
      {
        AllowMultiple: false,
        Name: 'ContentToApprove',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Content to approve',
        Description: 'Ctd-ApprovalWorkflowTasken-USContentToApprove-Descriptione',
        ReadOnly: true,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'WebContent',
    DisplayName: 'Web Content (structured web content)',
    Description: 'Web Content is the base type for structured web content.',
    Icon: 'WebContent',
    ParentTypeName: 'ListItem',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        DateTimeMode: 2,
        Name: 'ReviewDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Review date',
        Description: '',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'ArchiveDate',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Archive date',
        Description: '',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'EnableLifespan',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Enable Lifespan',
        Description: 'Specify whether you want to define starting and end date for the validity of this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'ValidFrom',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Valid From',
        Description: 'This content will appear on the date you set if lifespan handling is enabled for this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        DateTimeMode: 2,
        Name: 'ValidTill',
        FieldClassName: 'SenseNet.ContentRepository.Fields.DateTimeField',
        DisplayName: 'Valid Till',
        Description: 'This content will disappear on the date you set if lifespan handling is enabled for this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'DateTimeFieldSetting',
      },
      {
        Name: 'IsTaggable',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Enable Tagging',
        Description: 'Specify whether you would like to enable tagging capability for this content.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        DefaultValue: 'false',
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Tags',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Tags',
        Description: 'List of tags and creators of them separated by commas.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:TagList',
        Type: 'LongTextFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'Article',
    DisplayName: 'Article',
    Description: 'You can store and display textual information on the site.',
    Icon: 'WebContent',
    ParentTypeName: 'WebContent',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'DisplayName',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Display Name',
        Description: 'The headline of the article.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:DisplayName',
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Subtitle',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Subtitle',
        Description: 'A secondary headline. Displayed in the article pages.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        Name: 'Lead',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Lead',
        Description: 'Short lead of article.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Body',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Body',
        Description: 'Body.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:RichText',
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Pinned',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BooleanField',
        DisplayName: 'Highlights',
        Description: 'Content is always showing on the main page\'s [Highlights] collection.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'NullFieldSetting',
      },
      {
        Name: 'Keywords',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'Keywords',
        Description: 'Keywords',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
      {
        Name: 'Author',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ShortTextField',
        DisplayName: 'Author',
        Description: 'Author',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'ShortTextFieldSetting',
      },
      {
        AllowMultiple: false,
        Name: 'ImageRef',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ReferenceField',
        DisplayName: 'Cover image (reference)',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'ReferenceFieldSetting',
      },
      {
        Name: 'ImageData',
        FieldClassName: 'SenseNet.ContentRepository.Fields.BinaryField',
        DisplayName: 'Cover image (binarydata)',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: false,
        VisibleBrowse: 1,
        VisibleEdit: 1,
        VisibleNew: 1,
        DefaultOrder: 0,
        Type: 'BinaryFieldSetting',
      },
      {
        Name: 'Image',
        FieldClassName: 'SenseNet.ContentRepository.Fields.ImageField',
        DisplayName: 'Cover image (composite)',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 0,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        ControlHint: 'sn:Image',
        Type: 'NullFieldSetting',
      },
    ],
  },
  {
    ContentTypeName: 'HTMLContent',
    DisplayName: 'HTML Content (unstructured web content)',
    Description: 'This content can store an unstructured single html fragment.',
    Icon: 'WebContent',
    ParentTypeName: 'WebContent',
    AllowIndexing: true,
    AllowIncrementalNaming: false,
    AllowedChildTypes: [],
    FieldSettings: [
      {
        Name: 'HTMLFragment',
        FieldClassName: 'SenseNet.ContentRepository.Fields.LongTextField',
        DisplayName: 'HTML fragment',
        Description: 'Write your HTML code in the text area.',
        ReadOnly: false,
        Compulsory: false,
        OutputMethod: 3,
        Visible: true,
        VisibleBrowse: 0,
        VisibleEdit: 0,
        VisibleNew: 0,
        DefaultOrder: 0,
        Type: 'LongTextFieldSetting',
      },
    ],
  },
]
